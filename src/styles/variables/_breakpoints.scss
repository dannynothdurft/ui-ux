// =============================================================================
// MOBILE-FIRST BREAKPOINTS
// =============================================================================

// Breakpoint Variablen (Pixel-Werte)
$xs: 319px;    // Sehr kleine Geräte
$sm: 320px;    // Kleine Smartphones
$md: 480px;    // Standard Smartphones
$lg: 768px;    // Tablets (Portrait)
$xl: 1024px;   // Tablets (Landscape) / kleine Desktops
$xxl: 1300px;  // Große Laptops/Desktops
$xxxl: 1440px; // Full-HD & Widescreen

// Media Query Variablen
$mqXS: 'only screen and (max-width: #{$xs})';
$mqSM: 'only screen and (min-width: #{$sm})';
$mqMD: 'only screen and (min-width: #{$md})';
$mqLG: 'only screen and (min-width: #{$lg})';
$mqXL: 'only screen and (min-width: #{$xl})';
$mqXXL: 'only screen and (min-width: #{$xxl})';
$mqXXXL: 'only screen and (min-width: #{$xxxl})';

// Breakpoint Map für Mixins
$breakpoints: (
  'xs': $xs,
  'sm': $sm,
  'md': $md,
  'lg': $lg,
  'xl': $xl,
  'xxl': $xxl,
  'xxxl': $xxxl
);

// =============================================================================
// BREAKPOINT MIXINS
// =============================================================================

// Mixin für Mindest-Breakpoint
@mixin min-breakpoint($breakpoint-name) {
  $breakpoint-value: map-get($breakpoints, $breakpoint-name);
  
  @if $breakpoint-value {
    @media only screen and (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @error "Breakpoint '#{$breakpoint-name}' wurde nicht gefunden.";
  }
}

// Mixin für Maximal-Breakpoint
@mixin max-breakpoint($breakpoint-name) {
  $breakpoint-value: map-get($breakpoints, $breakpoint-name);
  
  @if $breakpoint-value {
    @media only screen and (max-width: ($breakpoint-value - 1px)) {
      @content;
    }
  } @else {
    @error "Breakpoint '#{$breakpoint-name}' wurde nicht gefunden.";
  }
}

// Mixin für Breakpoint-Bereich
@mixin between-breakpoints($min-breakpoint, $max-breakpoint) {
  $min-value: map-get($breakpoints, $min-breakpoint);
  $max-value: map-get($breakpoints, $max-breakpoint);
  
  @if $min-value and $max-value {
    @media only screen and (min-width: $min-value) and (max-width: ($max-value - 1px)) {
      @content;
    }
  } @else {
    @error "Ein oder beide Breakpoints wurden nicht gefunden.";
  }
}

// =============================================================================
// RESPONSIVE UTILITIES
// =============================================================================

// Mixin für responsive Eigenschaften
@mixin responsive-property($property, $default-value, $breakpoint-values: ()) {
  #{$property}: $default-value;
  
  @each $breakpoint-name, $value in $breakpoint-values {
    @include min-breakpoint($breakpoint-name) {
      #{$property}: $value;
    }
  }
}

// Element auf bestimmten Breakpoints ausblenden
@mixin hide-on($breakpoint-name) {
  @include min-breakpoint($breakpoint-name) {
    display: none !important;
  }
}

// Element nur auf bestimmten Breakpoints anzeigen
@mixin show-only-on($breakpoint-name) {
  display: none !important;
  
  @include min-breakpoint($breakpoint-name) {
    display: block !important;
  }
}

// =============================================================================
// BREAKPOINT DEBUG (für Entwicklung)
// =============================================================================

@mixin breakpoint-debug {
  body::before {
    content: 'default (xs)';
    position: fixed;
    top: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.5rem;
    z-index: 9999;
    font-family: monospace;
    font-size: 12px;
    
    // Aktuellen Breakpoint anzeigen
    @include min-breakpoint('sm') { content: 'sm'; }
    @include min-breakpoint('md') { content: 'md'; }
    @include min-breakpoint('lg') { content: 'lg'; }
    @include min-breakpoint('xl') { content: 'xl'; }
    @include min-breakpoint('xxl') { content: 'xxl'; }
    @include min-breakpoint('xxxl') { content: 'xxxl'; }
  }
}

// Für Entwicklung aktivieren (auskommentieren):
// @include breakpoint-debug;